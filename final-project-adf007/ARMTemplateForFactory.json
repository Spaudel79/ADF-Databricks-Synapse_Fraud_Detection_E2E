{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "final-project-adf007"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"dataflow_sink_dataset_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dataflow_sink_dataset'"
		},
		"dataset_sink_products_bootcamp_onprem_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dataset_sink_products_bootcamp_onprem'"
		},
		"linkedservice_customer_sink_afterdataflow_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'linkedservice_customer_sink_afterdataflow'"
		},
		"linkedservice_for_dataflow_customer_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'linkedservice_for_dataflow_customer'"
		},
		"linkedservice_onprem_source_sales_bootcamp_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linkedservice_onprem_source_sales_bootcamp'"
		},
		"linkedservice_sink_csv_from_github_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'linkedservice_sink_csv_from_github'"
		},
		"linkedservice_sink_customer_github_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'linkedservice_sink_customer_github'"
		},
		"onprem_adls_source_final_linkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'onprem_adls_source_final_linkedservice'"
		},
		"onprem_sqlserver_source_linkedservice_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'onprem_sqlserver_source_linkedservice'"
		},
		"sink_adls_bronze_linkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sink_adls_bronze_linkedservice'"
		},
		"sink_dataflow_linkeservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'sink_dataflow_linkeservice'"
		},
		"source_dataflow_linkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'source_dataflow_linkedservice'"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0928-154520-mbpda026"
		},
		"dataflow_sink_dataset_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		},
		"dataset_sink_products_bootcamp_onprem_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		},
		"github_source_linkedservice_customer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/Spaudel79/Datasets-Repository/refs/heads/main/customers_messy.csv"
		},
		"linkedservice_customer_sink_afterdataflow_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		},
		"linkedservice_for_dataflow_customer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		},
		"linkedservice_onprem_source_sales_bootcamp_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-UHTBC01"
		},
		"linkedservice_onprem_source_sales_bootcamp_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "bootcamp"
		},
		"linkedservice_onprem_source_sales_bootcamp_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "newsqlserver"
		},
		"linkedservice_sink_csv_from_github_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		},
		"linkedservice_sink_customer_github_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		},
		"onprem_adls_source_final_linkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		},
		"onprem_sqlserver_source_linkedservice_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-UHTBC01"
		},
		"onprem_sqlserver_source_linkedservice_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "customer"
		},
		"onprem_sqlserver_source_linkedservice_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "newsqlserver"
		},
		"sink_adls_bronze_linkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		},
		"sink_dataflow_linkeservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		},
		"source_dataflow_linkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sepstoragegenz.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Bootcamp1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GIthubCopy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dataset_source_github",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sink_csv_from_github",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "OnPremCopy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dataset_onprem_source_sales_bootcamp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dataset_sink_products_bootcamp_onprem",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow for Customers",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowcustomers",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customersource": {},
									"Customersink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataset_source_github')]",
				"[concat(variables('factoryId'), '/datasets/dataset_sink_csv_from_github')]",
				"[concat(variables('factoryId'), '/datasets/dataset_onprem_source_sales_bootcamp')]",
				"[concat(variables('factoryId'), '/datasets/dataset_sink_products_bootcamp_onprem')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowcustomers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/final_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "onprem_sqlserver_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sink_adls_bronze_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Final_dataflow",
								"type": "DataFlowReference",
								"parameters": {
									"parameter1": {
										"value": "'@{activity('Copy data1').output}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/saritaadhikaripaudel@gmail.com/New EndtoEnd Project/Final Notebook 2025-09-28 22:36:51"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-28T08:45:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprem_sqlserver_dataset')]",
				"[concat(variables('factoryId'), '/datasets/sink_adls_bronze_dataset')]",
				"[concat(variables('factoryId'), '/dataflows/Final_dataflow')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_sink_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dataflow_sink_dataset",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/output",
						"fileSystem": "final-project-folder"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dataflow_sink_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_source_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source_dataflow_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.Transcations.txt",
						"folderPath": "bronze/input",
						"fileSystem": "final-project-folder"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TransactionID",
						"type": "String"
					},
					{
						"name": "AccountID",
						"type": "String"
					},
					{
						"name": "TransactionAmount",
						"type": "String"
					},
					{
						"name": "TransactionDate",
						"type": "String"
					},
					{
						"name": "TransactionType",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "DeviceID",
						"type": "String"
					},
					{
						"name": "IP_Address",
						"type": "String"
					},
					{
						"name": "MerchantID",
						"type": "String"
					},
					{
						"name": "Channel",
						"type": "String"
					},
					{
						"name": "CustomerAge",
						"type": "String"
					},
					{
						"name": "CustomerOccupation",
						"type": "String"
					},
					{
						"name": "TransactionDuration",
						"type": "String"
					},
					{
						"name": "LoginAttempts",
						"type": "String"
					},
					{
						"name": "AccountBalance",
						"type": "String"
					},
					{
						"name": "PreviousTransactionDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source_dataflow_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_customer_sink_afterdataflow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservice_customer_sink_afterdataflow",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sink_customers",
						"fileSystem": "bootcamp-project-1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedservice_customer_sink_afterdataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_for_dataflow_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservice_for_dataflow_customer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "49e24539-2bd1-4abc-8279-e7c7214e32f2",
						"folderPath": "github_customer",
						"fileSystem": "bootcamp-project-1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerName",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedservice_for_dataflow_customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_onprem_source_sales_bootcamp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservice_onprem_source_sales_bootcamp",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductID",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SaleDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Quantity",
						"type": "nvarchar"
					},
					{
						"name": "TotalAmount",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales_messy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedservice_onprem_source_sales_bootcamp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_sink_csv_from_github')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservice_sink_csv_from_github",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "github_customer",
						"fileSystem": "bootcamp-project-1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedservice_sink_csv_from_github')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_sink_products_bootcamp_onprem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dataset_sink_products_bootcamp_onprem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "onPrem_sales",
						"fileSystem": "bootcamp-project-1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dataset_sink_products_bootcamp_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_source_github')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "github_source_linkedservice_customer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/github_source_linkedservice_customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem_adls_source_final_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onprem_adls_source_final_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onprem_adls_source_final_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem_sqlserver_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onprem_sqlserver_source_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "TransactionID",
						"type": "nvarchar"
					},
					{
						"name": "AccountID",
						"type": "nvarchar"
					},
					{
						"name": "TransactionAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TransactionDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "TransactionType",
						"type": "nvarchar"
					},
					{
						"name": "Location",
						"type": "nvarchar"
					},
					{
						"name": "DeviceID",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					},
					{
						"name": "MerchantID",
						"type": "nvarchar"
					},
					{
						"name": "Channel",
						"type": "nvarchar"
					},
					{
						"name": "CustomerAge",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "CustomerOccupation",
						"type": "nvarchar"
					},
					{
						"name": "TransactionDuration",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "LoginAttempts",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "AccountBalance",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PreviousTransactionDate",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transcations"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onprem_sqlserver_source_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_adls_bronze_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sink_adls_bronze_linkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze",
						"fileSystem": "final-project-folder"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sink_adls_bronze_linkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2100542564469931.11.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_sink_dataset')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dataflow_sink_dataset_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dataflow_sink_dataset_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_sink_products_bootcamp_onprem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dataset_sink_products_bootcamp_onprem_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dataset_sink_products_bootcamp_onprem_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/github_source_linkedservice_customer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('github_source_linkedservice_customer_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_customer_sink_afterdataflow')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkedservice_customer_sink_afterdataflow_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_customer_sink_afterdataflow_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_for_dataflow_customer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkedservice_for_dataflow_customer_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_for_dataflow_customer_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_onprem_source_sales_bootcamp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('linkedservice_onprem_source_sales_bootcamp_properties_typeProperties_server')]",
					"database": "[parameters('linkedservice_onprem_source_sales_bootcamp_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('linkedservice_onprem_source_sales_bootcamp_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_onprem_source_sales_bootcamp_password')]"
					}
				},
				"connectVia": {
					"referenceName": "selfhostedintegrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfhostedintegrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_sink_csv_from_github')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkedservice_sink_csv_from_github_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_sink_csv_from_github_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservice_sink_customer_github')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkedservice_sink_customer_github_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('linkedservice_sink_customer_github_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem_adls_source_final_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('onprem_adls_source_final_linkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('onprem_adls_source_final_linkedservice_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "selfhostedintegrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfhostedintegrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem_sqlserver_source_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('onprem_sqlserver_source_linkedservice_properties_typeProperties_server')]",
					"database": "[parameters('onprem_sqlserver_source_linkedservice_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('onprem_sqlserver_source_linkedservice_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('onprem_sqlserver_source_linkedservice_password')]"
					}
				},
				"connectVia": {
					"referenceName": "selfhostedintegrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfhostedintegrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_adls_bronze_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sink_adls_bronze_linkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sink_adls_bronze_linkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_dataflow_linkeservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sink_dataflow_linkeservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('sink_dataflow_linkeservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_dataflow_linkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('source_dataflow_linkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('source_dataflow_linkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfhostedintegrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Final_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dataflow_source_dataset",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataflow_sink_dataset",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string",
						"}",
						"source(output(",
						"          TransactionID as string,",
						"          AccountID as string,",
						"          TransactionAmount as string,",
						"          TransactionDate as string,",
						"          TransactionType as string,",
						"          Location as string,",
						"          DeviceID as string,",
						"          IP_Address as string,",
						"          MerchantID as string,",
						"          Channel as string,",
						"          CustomerAge as string,",
						"          CustomerOccupation as string,",
						"          TransactionDuration as string,",
						"          LoginAttempts as string,",
						"          AccountBalance as string,",
						"          PreviousTransactionDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 aggregate(groupBy(TransactionID,",
						"          AccountID,",
						"          TransactionAmount,",
						"          TransactionDate,",
						"          TransactionType,",
						"          Location,",
						"          DeviceID,",
						"          IP_Address,",
						"          MerchantID,",
						"          Channel,",
						"          CustomerAge,",
						"          CustomerOccupation,",
						"          TransactionDuration,",
						"          LoginAttempts,",
						"          AccountBalance,",
						"          PreviousTransactionDate),",
						"     DuplicateCount = count(1)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataflow_source_dataset')]",
				"[concat(variables('factoryId'), '/datasets/dataflow_sink_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowcustomers')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dataset_for_dataflow_customer",
								"type": "DatasetReference"
							},
							"name": "customersource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataset_customer_sink_afterdataflow",
								"type": "DatasetReference"
							},
							"name": "Customersink"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerName as string,",
						"          Email as string,",
						"          Phone as string,",
						"          City as string,",
						"          Country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> customersource",
						"customersource derive(Country = iif(isNull(Country) || Country == '', toString(null()), upper(Country))) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Customersink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataset_for_dataflow_customer')]",
				"[concat(variables('factoryId'), '/datasets/dataset_customer_sink_afterdataflow')]"
			]
		}
	]
}